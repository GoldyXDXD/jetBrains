package contacts;

import java.util.Scanner;
import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {
    
    static Scanner scanner = new Scanner(System.in);
    static int contactCounter = 0;
    
    public static void main(String[] args) {
        List<Contact> contactList = new ArrayList<>();
        boolean flag = true;
        while (flag) {
            System.out.println("Enter action (add, remove, edit, count, list, exit) ");
            switch (scanner.nextLine()) {
                case "add":
                    Contact contact = new Contact();
                    System.out.println("Enter the name of the person: ");
                    contact.setName(scanner.nextLine());
                    System.out.println("Enter the surname of the person: ");
                    contact.setSurname(scanner.nextLine());
                    System.out.println("Enter the number: ");
                    contact.setPhone(scanner.nextLine());
                    System.out.println("A record created!");
                    contactList.add(contact);
                    contactCounter++;
                    break;
                case "remove":
                    if (contactList.size() < 1) {
                        System.out.println("No records to remove!");
                    } else {
                        displayList(contactList);
                        removeRecord(contactList);
                    }

                    break;
                case "edit":
                    if (contactList.size() < 1) {
                        System.out.println("No records to edit!");
                    } else {
                        displayList(contactList);
                        editRecord(contactList);
                    }
                    break;
                case "count":
                    System.out.println("The Phone Book has " + contactCounter + " records");
                    break;
                case "list":
                    if (contactList.size() > 0) {
                        displayList(contactList);
                    } else {
                        System.out.println("The Phone book has no records!");
                    }
                    break;
                case "exit":
                    flag = false;
                    break;
                default:
                    break;
            }
        }
    }
    
    private static Integer getNumberOfRecord(List<Contact> contactList){
        int rec = 0;
        boolean flag = true;
        String userInput = "";
        while (flag) {
            if (rec > 0 && rec <= contactList.size()) flag = false;
            else{
                try {
                    System.out.println("Select a record: ");
                    userInput = scanner.nextLine();
                    rec = Integer.parseInt(String.valueOf(userInput));
                } catch (NumberFormatException e) {
                    System.out.println("Wrong input! Try again.");
                }
            }
        }

        return rec;
    }

    private static void removeRecord(List<Contact> contactList) {
        int rec = getNumberOfRecord(contactList)-1;
        contactList.remove(rec);
        contactCounter--;
        System.out.println("The record removed!");
    }

    private static void editRecord(List<Contact> contactList) {
        int rec = getNumberOfRecord(contactList)-1;
        System.out.println("Select a field (name, surname, number): ");
        switch (scanner.nextLine()) {
            case "name":
                System.out.println("Enter the name of the person: ");
                contactList.get(rec).setName(scanner.nextLine());
                break;
            case "surname":
                System.out.println("Enter the surname of the person: ");
                contactList.get(rec).setSurname(scanner.nextLine());
                break;
            case "number":
                System.out.println("Enter the number: ");
                contactList.get(rec).setPhone(scanner.nextLine());
                break;
            default:
                break;
        }

        System.out.println("The record updated!");
    }

    public static void displayList(List<Contact> contactList) {
        int size = contactList.size();
        for (int i = 0; i < size; i++) {
            //i+1 to start list with 1 not with zero
            System.out.println((i + 1) + ". " + contactList.get(i).toString());
        }
    }
}

class Contact {
    private String name;
    private String surname;
    private String phone;

    public Contact() {
    }

    public String getName() {
        return name;
    }

    public String getSurname() {
        return surname;
    }

    public String getPhone() {
        return phone;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public void setPhone(String phone) {
        this.phone = validatePhoneNumber(phone);
    }

    @Override
    public String toString() {
        return "" + name + " " + surname + ", " + phone;
    }

    private String validatePhoneNumber(String phoneNumber) {
//        String regex = "\\+?((\\(\\d+\\)( |-)(\\d+){2,})|(\\d+( |-)\\((\\d+){2,}\\))|((\\d+){2,})|(\\(\\d+\\)))(( |-)(\\w+){2,})*";
        String regex = "\\+?((\\w+( |-)\\((\\w+){2,}\\))|(\\(\\w+\\)( |-)(\\w+){2,})|(\\((\\w+)\\))|(\\w+))(( |-)((\\w+){2,}))*";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(phoneNumber);
        String s = "";
        if (matcher.matches()) {
            s = phoneNumber;
        }else{
            s = "[no number]";
            System.out.println("Wrong number format!");
        }

        return s;
    }

    private boolean hasNumber(Contact contact) {
        boolean hasNumber = true;
        if (contact.getPhone().equalsIgnoreCase("") || contact.getPhone().equalsIgnoreCase("[no number]")) {
            hasNumber = false;
        }
        return hasNumber;
    }
}
